{"version":3,"file":"index-afcc11ed.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/LoadingSpinner.tsx","../../src/components/LoadingOverlay.tsx","../../src/components/ConfiguratorLoading.tsx","../../src/components/ErrorBoundary.tsx","../../src/components/ConfiguratorError.tsx","../../src/utils/logger.ts","../../src/utils/fallbackConfig.ts","../../src/utils/urlParams.ts","../../src/utils/embodeeApi.ts","../../src/hooks/useEmbodee.ts","../../src/components/ConfiguratorWrapper.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from 'react';\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg';\n  message?: string;\n  className?: string;\n}\n\n/**\n * Loading spinner component with customizable size and message\n */\nexport const LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\n  size = 'md',\n  message,\n  className = ''\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-8 h-8',\n    lg: 'w-12 h-12'\n  };\n\n  return (\n    <div className={`flex flex-col items-center justify-center space-y-3 ${className}`}>\n      <div className={`${sizeClasses[size]} animate-spin`} data-testid=\"loading-spinner\">\n        <svg\n          className=\"w-full h-full text-blue-600\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          />\n          <path\n            className=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n      </div>\n      {message && (\n        <p className=\"text-sm text-gray-600 animate-pulse\">{message}</p>\n      )}\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport LoadingSpinner from './LoadingSpinner';\n\ninterface LoadingOverlayProps {\n  isLoading: boolean;\n  message?: string;\n  children: React.ReactNode;\n  className?: string;\n  overlayClassName?: string;\n}\n\n/**\n * Loading overlay component that shows a spinner over content when loading\n */\nexport const LoadingOverlay: React.FC<LoadingOverlayProps> = ({\n  isLoading,\n  message,\n  children,\n  className = '',\n  overlayClassName = ''\n}) => {\n  return (\n    <div className={`relative ${className}`}>\n      {children}\n      {isLoading && (\n        <div className={`absolute inset-0 bg-white bg-opacity-75 flex items-center justify-center z-50 ${overlayClassName}`}>\n          <LoadingSpinner size=\"lg\" message={message || ''} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LoadingOverlay;\n","import React from 'react';\nimport LoadingSpinner from './LoadingSpinner';\n\ninterface ConfiguratorLoadingProps {\n  isLoading: boolean;\n  isRetrying: boolean;\n  retryCount: number;\n  message?: string;\n  className?: string;\n}\n\n/**\n * Loading component specifically for the configurator with retry status\n */\nexport const ConfiguratorLoading: React.FC<ConfiguratorLoadingProps> = ({\n  isLoading,\n  isRetrying,\n  retryCount,\n  message,\n  className = ''\n}) => {\n  if (!isLoading && !isRetrying) {\n    return null;\n  }\n\n  const getLoadingMessage = () => {\n    if (isRetrying && retryCount > 0) {\n      return `Retrying... (${retryCount}/3)`;\n    }\n    if (message) {\n      return message;\n    }\n    if (isRetrying) {\n      return 'Initializing configurator...';\n    }\n    return 'Loading configurator...';\n  };\n\n  return (\n    <div className={`flex flex-col items-center justify-center min-h-[400px] space-y-4 ${className}`}>\n      <LoadingSpinner size=\"lg\" message={getLoadingMessage()} />\n      \n      {isRetrying && retryCount > 0 && (\n        <div className=\"text-sm text-gray-500 text-center\">\n          <p>Having trouble connecting to the configurator.</p>\n          <p>This usually resolves automatically.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ConfiguratorLoading;\n","import { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n  className?: string;\n}\n\n/**\n * Error boundary component to catch and handle React errors\n */\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return {\n      hasError: true,\n      error,\n      errorInfo: null\n    };\n  }\n\n  override componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.setState({\n      error,\n      errorInfo\n    });\n\n    // Call the onError callback if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n\n    // Log error to console in development\n    if (process.env['NODE_ENV'] === 'development') {\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\n    }\n  }\n\n  handleRetry = () => {\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null\n    });\n  };\n\n  override render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      return (\n        <div className={`flex flex-col items-center justify-center min-h-[400px] p-6 text-center ${this.props.className || ''}`}>\n          <div className=\"max-w-md\">\n            <div className=\"mb-4\">\n              <svg\n                className=\"w-16 h-16 mx-auto text-red-500\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\n                />\n              </svg>\n            </div>\n            \n            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              Something went wrong\n            </h2>\n            \n            <p className=\"text-gray-600 mb-4\">\n              The configurator encountered an unexpected error. Please try refreshing the page.\n            </p>\n            \n            {process.env['NODE_ENV'] === 'development' && this.state.error && (\n              <details className=\"mb-4 text-left\">\n                <summary className=\"cursor-pointer text-sm text-gray-500 hover:text-gray-700\">\n                  Error Details\n                </summary>\n                <pre className=\"mt-2 text-xs text-red-600 bg-red-50 p-2 rounded overflow-auto\">\n                  {this.state.error.toString()}\n                  {this.state.errorInfo?.componentStack}\n                </pre>\n              </details>\n            )}\n            \n            <div className=\"space-x-3\">\n              <button\n                onClick={this.handleRetry}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n              >\n                Try Again\n              </button>\n              \n              <button\n                onClick={() => window.location.reload()}\n                className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\n              >\n                Refresh Page\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\n\ninterface ConfiguratorErrorProps {\n  error: string | null;\n  isRetrying: boolean;\n  retryCount: number;\n  onRetry: () => void;\n  className?: string;\n}\n\n/**\n * Error component specifically for configurator API errors\n */\nexport const ConfiguratorError: React.FC<ConfiguratorErrorProps> = ({\n  error,\n  isRetrying,\n  retryCount,\n  onRetry,\n  className = ''\n}) => {\n  if (!error) {\n    return null;\n  }\n\n  const getErrorMessage = () => {\n    if (isRetrying) {\n      return `Retrying... (${retryCount}/3)`;\n    }\n    return error;\n  };\n\n  const getErrorType = () => {\n    if (error.includes('Invalid workspaceID') || error.includes('Invalid productID')) {\n      return 'configuration';\n    }\n    if (error.includes('Network') || error.includes('timeout')) {\n      return 'network';\n    }\n    if (error.includes('3D viewer script failed to load')) {\n      return 'script';\n    }\n    return 'general';\n  };\n\n  const errorType = getErrorType();\n\n  const getErrorIcon = () => {\n    switch (errorType) {\n      case 'configuration':\n        return (\n          <svg className=\"w-16 h-16 mx-auto text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n          </svg>\n        );\n      case 'network':\n        return (\n          <svg className=\"w-16 h-16 mx-auto text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192L5.636 18.364M12 2.25a9.75 9.75 0 100 19.5 9.75 9.75 0 000-19.5z\" />\n          </svg>\n        );\n      case 'script':\n        return (\n          <svg className=\"w-16 h-16 mx-auto text-orange-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n          </svg>\n        );\n      default:\n        return (\n          <svg className=\"w-16 h-16 mx-auto text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n          </svg>\n        );\n    }\n  };\n\n  const getErrorTitle = () => {\n    switch (errorType) {\n      case 'configuration':\n        return 'Configuration Error';\n      case 'network':\n        return 'Connection Error';\n      case 'script':\n        return '3D Viewer Error';\n      default:\n        return 'Configurator Error';\n    }\n  };\n\n  const getErrorDescription = () => {\n    switch (errorType) {\n      case 'configuration':\n        return 'The workspace or product ID is invalid. Please check your configuration.';\n      case 'network':\n        return 'Unable to connect to the configurator service. Please check your internet connection.';\n      case 'script':\n        return 'The 3D viewer failed to load. This may be due to browser compatibility or network issues.';\n      default:\n        return 'An unexpected error occurred while loading the configurator.';\n    }\n  };\n\n  return (\n    <div className={`flex flex-col items-center justify-center min-h-[400px] p-6 text-center ${className}`}>\n      <div className=\"max-w-md\">\n        <div className=\"mb-4\">\n          {getErrorIcon()}\n        </div>\n        \n        <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\n          {getErrorTitle()}\n        </h2>\n        \n        <p className=\"text-gray-600 mb-4\">\n          {getErrorDescription()}\n        </p>\n        \n        <div className=\"text-sm text-gray-500 mb-4\">\n          {getErrorMessage()}\n        </div>\n        \n        <div className=\"space-x-3\">\n          {!isRetrying && (\n            <button\n              onClick={onRetry}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n            >\n              Try Again\n            </button>\n          )}\n          \n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\n          >\n            Refresh Page\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfiguratorError;\n","// Enhanced logging utility for Embodee Product Configurator\n// Provides structured logging for API calls, responses, and debugging\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3\n}\n\nexport interface LogEntry {\n  timestamp: string;\n  level: LogLevel;\n  category: string;\n  message: string;\n  data?: any;\n  context?: string;\n}\n\nexport interface LoggerConfig {\n  level: LogLevel;\n  enableConsole: boolean;\n  enableStorage: boolean;\n  maxStorageEntries: number;\n  categories: string[];\n}\n\n/**\n * Enhanced logger class for structured logging\n */\nexport class Logger {\n  private config: LoggerConfig;\n  private logs: LogEntry[] = [];\n\n  constructor(config: Partial<LoggerConfig> = {}) {\n    this.config = {\n      level: process.env['NODE_ENV'] === 'development' ? LogLevel.DEBUG : LogLevel.WARN,\n      enableConsole: true,\n      enableStorage: process.env['NODE_ENV'] === 'development',\n      maxStorageEntries: 1000,\n      categories: ['API', 'CONFIGURATOR', 'ERROR', 'DEBUG'],\n      ...config\n    };\n  }\n\n  private shouldLog(level: LogLevel, category: string): boolean {\n    return (\n      level >= this.config.level &&\n      this.config.categories.includes(category)\n    );\n  }\n\n  private createLogEntry(\n    level: LogLevel,\n    category: string,\n    message: string,\n    data?: any,\n    context?: string\n  ): LogEntry {\n    return {\n      timestamp: new Date().toISOString(),\n      level,\n      category,\n      message,\n      data,\n      ...(context && { context })\n    };\n  }\n\n  private log(level: LogLevel, category: string, message: string, data?: any, context?: string): void {\n    if (!this.shouldLog(level, category)) return;\n\n    const entry = this.createLogEntry(level, category, message, data, context);\n\n    // Store in memory if enabled\n    if (this.config.enableStorage) {\n      this.logs.push(entry);\n      if (this.logs.length > this.config.maxStorageEntries) {\n        this.logs.shift();\n      }\n    }\n\n    // Console output if enabled\n    if (this.config.enableConsole) {\n      const levelName = LogLevel[level];\n      const prefix = `[${entry.timestamp}] [${levelName}] [${category}]`;\n      \n      if (context) {\n        console.log(`${prefix} [${context}] ${message}`, data || '');\n      } else {\n        console.log(`${prefix} ${message}`, data || '');\n      }\n    }\n  }\n\n  debug(category: string, message: string, data?: any, context?: string): void {\n    this.log(LogLevel.DEBUG, category, message, data, context);\n  }\n\n  info(category: string, message: string, data?: any, context?: string): void {\n    this.log(LogLevel.INFO, category, message, data, context);\n  }\n\n  warn(category: string, message: string, data?: any, context?: string): void {\n    this.log(LogLevel.WARN, category, message, data, context);\n  }\n\n  error(category: string, message: string, data?: any, context?: string): void {\n    this.log(LogLevel.ERROR, category, message, data, context);\n  }\n\n  // API-specific logging methods\n  apiCall(method: string, url: string, params?: any, context?: string): void {\n    this.debug('API', `API Call: ${method} ${url}`, { params }, context);\n  }\n\n  apiResponse(method: string, url: string, status: number, response: any, context?: string): void {\n    const level = status >= 400 ? LogLevel.ERROR : LogLevel.DEBUG;\n    this.log(level, 'API', `API Response: ${method} ${url} (${status})`, { response }, context);\n  }\n\n  apiError(method: string, url: string, error: any, context?: string): void {\n    this.error('API', `API Error: ${method} ${url}`, { error: error.message, stack: error.stack }, context);\n  }\n\n  // Configurator-specific logging methods\n  configuratorInit(params: any, context?: string): void {\n    this.info('CONFIGURATOR', 'Configurator initialization started', { params }, context);\n  }\n\n  configuratorReady(options: any, selections: any, context?: string): void {\n    this.info('CONFIGURATOR', 'Configurator ready', { options: options.length, selections: Object.keys(selections).length }, context);\n  }\n\n  configuratorError(error: any, context?: string): void {\n    this.error('CONFIGURATOR', 'Configurator error', { error: error.message, stack: error.stack }, context);\n  }\n\n  // Utility methods\n  getLogs(category?: string, level?: LogLevel): LogEntry[] {\n    let filtered = this.logs;\n    \n    if (category) {\n      filtered = filtered.filter(log => log.category === category);\n    }\n    \n    if (level !== undefined) {\n      filtered = filtered.filter(log => log.level >= level);\n    }\n    \n    return filtered;\n  }\n\n  clearLogs(): void {\n    this.logs = [];\n  }\n\n  exportLogs(): string {\n    return JSON.stringify(this.logs, null, 2);\n  }\n\n  updateConfig(newConfig: Partial<LoggerConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n  }\n}\n\n// Default logger instance\nexport const logger = new Logger();\n\n// Convenience functions for backward compatibility\nexport function logApiError(error: any, context: string = 'API Call'): void {\n  logger.error('API', `API Error: ${context}`, { error: error.message, stack: error.stack }, context);\n}\n\nexport function logApiCall(method: string, url: string, params?: any, context?: string): void {\n  logger.apiCall(method, url, params, context);\n}\n\nexport function logApiResponse(method: string, url: string, status: number, response: any, context?: string): void {\n  logger.apiResponse(method, url, status, response, context);\n}\n\nexport function logConfiguratorInit(params: any, context?: string): void {\n  logger.configuratorInit(params, context);\n}\n\nexport function logConfiguratorReady(options: any, selections: any, context?: string): void {\n  logger.configuratorReady(options, selections, context);\n}\n\nexport function logConfiguratorError(error: any, context?: string): void {\n  logger.configuratorError(error, context);\n}\n\nexport default logger;\n","// Fallback configuration utility for Embodee Product Configurator\n// Provides intelligent fallback mechanisms for default parameters\n\nimport { URLParams } from '../types';\nimport { logger } from './logger';\n\nexport interface FallbackConfig {\n  workspaceID: string;\n  productID: string;\n  host: string;\n  width: string;\n  height: string;\n  variant: string;\n  designID: string;\n}\n\nexport interface FallbackStrategy {\n  useEnvironmentDefaults: boolean;\n  useLocalStorage: boolean;\n  useQueryParams: boolean;\n  useHardcodedDefaults: boolean;\n}\n\n/**\n * Default fallback configuration\n */\nconst DEFAULT_FALLBACK_CONFIG: FallbackConfig = {\n  workspaceID: 'demo-workspace',\n  productID: 'demo-product',\n  host: 'https://embodee.com',\n  width: '100%',\n  height: '600px',\n  variant: 'Master',\n  designID: 'false'\n};\n\n/**\n * Environment-specific fallback configurations\n */\nconst ENVIRONMENT_FALLBACKS: Record<string, Partial<FallbackConfig>> = {\n  development: {\n    workspaceID: 'dev-workspace',\n    productID: 'dev-product',\n    host: 'https://dev.embodee.com'\n  },\n  staging: {\n    workspaceID: 'staging-workspace',\n    productID: 'staging-product',\n    host: 'https://staging.embodee.com'\n  },\n  production: {\n    workspaceID: 'prod-workspace',\n    productID: 'prod-product',\n    host: 'https://embodee.com'\n  }\n};\n\n/**\n * Fallback configuration manager\n */\nexport class FallbackConfigManager {\n  private config: FallbackConfig;\n  private strategy: FallbackStrategy;\n\n  constructor(strategy: Partial<FallbackStrategy> = {}) {\n    this.strategy = {\n      useEnvironmentDefaults: true,\n      useLocalStorage: true,\n      useQueryParams: true,\n      useHardcodedDefaults: true,\n      ...strategy\n    };\n    \n    this.config = { ...DEFAULT_FALLBACK_CONFIG };\n    this.loadFallbackConfig();\n  }\n\n  /**\n   * Load fallback configuration from various sources\n   */\n  private loadFallbackConfig(): void {\n    logger.debug('FALLBACK', 'Loading fallback configuration', { strategy: this.strategy }, 'FallbackConfigManager');\n\n    // 1. Environment-specific defaults\n    if (this.strategy.useEnvironmentDefaults) {\n      const env = process.env['NODE_ENV'] || 'development';\n      const envConfig = ENVIRONMENT_FALLBACKS[env];\n      if (envConfig) {\n        this.config = { ...this.config, ...envConfig };\n        logger.debug('FALLBACK', 'Applied environment defaults', { env, config: envConfig }, 'FallbackConfigManager');\n      }\n    }\n\n    // 2. Local storage defaults\n    if (this.strategy.useLocalStorage && typeof window !== 'undefined') {\n      try {\n        const stored = localStorage.getItem('embodee-fallback-config');\n        if (stored) {\n          const parsed = JSON.parse(stored);\n          this.config = { ...this.config, ...parsed };\n          logger.debug('FALLBACK', 'Applied localStorage defaults', { config: parsed }, 'FallbackConfigManager');\n        }\n      } catch (error) {\n        logger.warn('FALLBACK', 'Failed to parse localStorage config', { error: (error as Error).message }, 'FallbackConfigManager');\n      }\n    }\n\n    // 3. Query parameter defaults (from URL)\n    if (this.strategy.useQueryParams && typeof window !== 'undefined') {\n      const urlParams = new URLSearchParams(window.location.search);\n      const queryConfig: Partial<FallbackConfig> = {};\n      \n      if (urlParams.has('defaultWorkspace')) {\n        queryConfig.workspaceID = urlParams.get('defaultWorkspace')!;\n      }\n      if (urlParams.has('defaultProduct')) {\n        queryConfig.productID = urlParams.get('defaultProduct')!;\n      }\n      if (urlParams.has('defaultHost')) {\n        queryConfig.host = urlParams.get('defaultHost')!;\n      }\n      \n      if (Object.keys(queryConfig).length > 0) {\n        this.config = { ...this.config, ...queryConfig };\n        logger.debug('FALLBACK', 'Applied query parameter defaults', { config: queryConfig }, 'FallbackConfigManager');\n      }\n    }\n  }\n\n  /**\n   * Get fallback configuration\n   */\n  getConfig(): FallbackConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Update fallback configuration\n   */\n  updateConfig(newConfig: Partial<FallbackConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n    logger.info('FALLBACK', 'Fallback configuration updated', { config: newConfig }, 'FallbackConfigManager');\n    \n    // Save to localStorage if enabled\n    if (this.strategy.useLocalStorage && typeof window !== 'undefined') {\n      try {\n        localStorage.setItem('embodee-fallback-config', JSON.stringify(this.config));\n        logger.debug('FALLBACK', 'Configuration saved to localStorage', {}, 'FallbackConfigManager');\n      } catch (error) {\n        logger.warn('FALLBACK', 'Failed to save to localStorage', { error: (error as Error).message }, 'FallbackConfigManager');\n      }\n    }\n  }\n\n  /**\n   * Apply fallbacks to URL parameters\n   */\n  applyFallbacks(params: Partial<URLParams>): URLParams {\n    const result: URLParams = {\n      workspaceID: params.workspaceID || this.config.workspaceID,\n      productID: params.productID || this.config.productID,\n      host: params.host || this.config.host,\n      width: params.width || this.config.width,\n      height: params.height || this.config.height,\n      variant: params.variant || this.config.variant,\n      designID: params.designID || this.config.designID\n    };\n\n    logger.debug('FALLBACK', 'Applied fallbacks to parameters', { \n      original: params, \n      result,\n      fallbacks: this.config \n    }, 'FallbackConfigManager');\n\n    return result;\n  }\n\n  /**\n   * Validate fallback configuration\n   */\n  validateConfig(): { isValid: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    if (!this.config.workspaceID || this.config.workspaceID.trim() === '') {\n      errors.push('workspaceID is required');\n    }\n\n    if (!this.config.productID || this.config.productID.trim() === '') {\n      errors.push('productID is required');\n    }\n\n    if (!this.config.host || this.config.host.trim() === '') {\n      errors.push('host is required');\n    }\n\n    // Validate host URL format\n    try {\n      new URL(this.config.host);\n    } catch {\n      errors.push('host must be a valid URL');\n    }\n\n    const isValid = errors.length === 0;\n    \n    if (!isValid) {\n      logger.warn('FALLBACK', 'Configuration validation failed', { errors }, 'FallbackConfigManager');\n    } else {\n      logger.debug('FALLBACK', 'Configuration validation passed', {}, 'FallbackConfigManager');\n    }\n\n    return { isValid, errors };\n  }\n\n  /**\n   * Reset to default configuration\n   */\n  reset(): void {\n    this.config = { ...DEFAULT_FALLBACK_CONFIG };\n    this.loadFallbackConfig();\n    logger.info('FALLBACK', 'Configuration reset to defaults', {}, 'FallbackConfigManager');\n  }\n\n  /**\n   * Get configuration summary for debugging\n   */\n  getSummary(): {\n    config: FallbackConfig;\n    strategy: FallbackStrategy;\n    validation: { isValid: boolean; errors: string[] };\n    sources: string[];\n  } {\n    const sources: string[] = [];\n    \n    if (this.strategy.useEnvironmentDefaults) sources.push('environment');\n    if (this.strategy.useLocalStorage) sources.push('localStorage');\n    if (this.strategy.useQueryParams) sources.push('queryParams');\n    if (this.strategy.useHardcodedDefaults) sources.push('hardcoded');\n\n    return {\n      config: this.config,\n      strategy: this.strategy,\n      validation: this.validateConfig(),\n      sources\n    };\n  }\n}\n\n// Default fallback manager instance\nexport const fallbackManager = new FallbackConfigManager();\n\n// Utility functions\nexport function getFallbackConfig(): FallbackConfig {\n  return fallbackManager.getConfig();\n}\n\nexport function updateFallbackConfig(config: Partial<FallbackConfig>): void {\n  fallbackManager.updateConfig(config);\n}\n\nexport function applyFallbacksToParams(params: Partial<URLParams>): URLParams {\n  return fallbackManager.applyFallbacks(params);\n}\n\nexport function validateFallbackConfig(): { isValid: boolean; errors: string[] } {\n  return fallbackManager.validateConfig();\n}\n\nexport function getFallbackSummary() {\n  return fallbackManager.getSummary();\n}\n\nexport default fallbackManager;\n","// URL parameter parsing utility for Embodee Product Configurator\n// Handles parsing of workspaceID, productID, variant, designID and other parameters\n\nimport { URLParams } from '../types';\nimport { applyFallbacksToParams } from './fallbackConfig';\nimport { logger } from './logger';\n\n/**\n * Default values for URL parameters when not provided\n */\nconst DEFAULT_PARAMS: Partial<URLParams> = {\n  workspaceID: 'default-workspace',\n  productID: 'default-product',\n  host: 'https://embodee.com',\n  width: '100%',\n  height: '600px'\n};\n\n/**\n * Parses URL parameters from the current window location or a provided URL\n * @param url - Optional URL string to parse. If not provided, uses current window.location\n * @returns URLParams object with parsed parameters\n */\nexport function parseUrlParams(url?: string): URLParams {\n  const urlToParse = url || (typeof window !== 'undefined' ? window.location.href : '');\n  const urlObj = new URL(urlToParse);\n  const params = urlObj.searchParams;\n\n  logger.debug('URL_PARAMS', 'Parsing URL parameters', { url: urlToParse }, 'parseUrlParams');\n\n  // Parse required parameters - check if they exist in URL first\n  const hasWorkspaceID = params.has('workspaceID') || params.has('workspace');\n  const hasProductID = params.has('productID') || params.has('product');\n  \n  const workspaceID = params.get('workspaceID') || params.get('workspace');\n  const productID = params.get('productID') || params.get('product');\n  \n  // Parse optional parameters\n  const variant = params.get('variant') || undefined;\n  const designID = params.get('designID') || params.get('design') || undefined;\n  const host = params.get('host') || undefined;\n  const width = params.get('width') || undefined;\n  const height = params.get('height') || undefined;\n\n  // Build partial params object\n  const partialParams: Partial<URLParams> = {};\n  \n  if (workspaceID) partialParams.workspaceID = workspaceID;\n  if (productID) partialParams.productID = productID;\n  if (variant) partialParams.variant = variant;\n  if (designID) partialParams.designID = designID;\n  if (host) partialParams.host = host;\n  if (width) partialParams.width = width;\n  if (height) partialParams.height = height;\n\n  // Apply fallbacks for missing parameters\n  const result = applyFallbacksToParams(partialParams);\n\n  logger.info('URL_PARAMS', 'URL parameters parsed successfully', {\n    hasWorkspaceID,\n    hasProductID,\n    parsedParams: partialParams,\n    finalParams: result,\n    fallbacksUsed: {\n      workspaceID: !hasWorkspaceID,\n      productID: !hasProductID,\n      host: !host,\n      width: !width,\n      height: !height\n    }\n  }, 'parseUrlParams');\n\n  return result;\n}\n\n/**\n * Parses URL parameters from a query string\n * @param queryString - The query string to parse (e.g., \"?workspaceID=123&productID=456\")\n * @returns URLParams object with parsed parameters\n */\nexport function parseQueryString(queryString: string): URLParams {\n  // Remove leading ? if present\n  const cleanQuery = queryString.startsWith('?') ? queryString.slice(1) : queryString;\n  \n  // Create a temporary URL to use URLSearchParams\n  const tempUrl = `https://example.com?${cleanQuery}`;\n  return parseUrlParams(tempUrl);\n}\n\n/**\n * Validates that required URL parameters are present and valid\n * @param params - URLParams object to validate\n * @returns Object with validation result and error message if invalid\n */\nexport function validateUrlParams(params: URLParams): { isValid: boolean; error?: string } {\n  if (!params.workspaceID || params.workspaceID.trim() === '') {\n    return { isValid: false, error: 'workspaceID is required' };\n  }\n\n  if (!params.productID || params.productID.trim() === '') {\n    return { isValid: false, error: 'productID is required' };\n  }\n\n  // Validate workspaceID format (should be alphanumeric with possible hyphens/underscores)\n  if (!/^[a-zA-Z0-9_-]+$/.test(params.workspaceID)) {\n    return { isValid: false, error: 'workspaceID contains invalid characters' };\n  }\n\n  // Validate productID format (should be alphanumeric with possible hyphens/underscores)\n  if (!/^[a-zA-Z0-9_-]+$/.test(params.productID)) {\n    return { isValid: false, error: 'productID contains invalid characters' };\n  }\n\n  // Validate variant if provided\n  if (params.variant && !/^[a-zA-Z0-9_-]+$/.test(params.variant)) {\n    return { isValid: false, error: 'variant contains invalid characters' };\n  }\n\n  // Validate designID if provided\n  if (params.designID && !/^[a-zA-Z0-9_-]+$/.test(params.designID)) {\n    return { isValid: false, error: 'designID contains invalid characters' };\n  }\n\n  return { isValid: true };\n}\n\n/**\n * Creates a URL with the provided parameters\n * @param baseUrl - Base URL to append parameters to\n * @param params - URLParams object to convert to query string\n * @returns Complete URL with parameters\n */\nexport function buildUrlWithParams(baseUrl: string, params: URLParams): string {\n  const url = new URL(baseUrl);\n  \n  // Add required parameters\n  url.searchParams.set('workspaceID', params.workspaceID);\n  url.searchParams.set('productID', params.productID);\n  \n  // Add optional parameters if they exist\n  if (params.variant) {\n    url.searchParams.set('variant', params.variant);\n  }\n  \n  if (params.designID) {\n    url.searchParams.set('designID', params.designID);\n  }\n  \n  if (params.host) {\n    url.searchParams.set('host', params.host);\n  }\n  \n  if (params.width && params.width !== DEFAULT_PARAMS.width) {\n    url.searchParams.set('width', params.width);\n  }\n  \n  if (params.height) {\n    url.searchParams.set('height', params.height);\n  }\n  \n  return url.toString();\n}\n\n/**\n * Gets URL parameters with fallback to defaults and validation\n * @param url - Optional URL to parse. If not provided, uses current window.location\n * @returns Validated URLParams object or throws error if validation fails\n */\nexport function getValidatedUrlParams(url?: string): URLParams {\n  const params = parseUrlParams(url);\n  const validation = validateUrlParams(params);\n  \n  if (!validation.isValid) {\n    throw new Error(`Invalid URL parameters: ${validation.error}`);\n  }\n  \n  return params;\n}\n\n/**\n * Checks if the current URL contains configurator parameters\n * @returns True if configurator parameters are present in the URL\n */\nexport function hasConfiguratorParams(): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n  \n  const params = new URLSearchParams(window.location.search);\n  return params.has('workspaceID') || params.has('workspace') || \n         params.has('productID') || params.has('product');\n}\n\n/**\n * Logs URL parameters for debugging purposes\n * @param params - URLParams object to log\n * @param label - Optional label for the log message\n */\nexport function logUrlParams(params: URLParams, label: string = 'URL Parameters'): void {\n  if (process.env['NODE_ENV'] === 'development') {\n    console.log(`${label}:`, {\n      workspaceID: params.workspaceID,\n      productID: params.productID,\n      variant: params.variant || 'none',\n      designID: params.designID || 'none',\n      host: params.host,\n      width: params.width,\n      height: params.height\n    });\n  }\n}\n","// Embodee API service for fetching product data and configuration\n// Handles API calls to Embodee endpoints with error handling and retry logic\n\nimport { URLParams, EmbodeeProductData, EmbodeeApiResponse } from '../types';\nimport { logger, logApiCall, logApiResponse } from './logger';\n\n/**\n * Custom API error class for better error handling\n */\nexport class ApiError extends Error {\n  public readonly code: number;\n  public readonly status: number;\n  public readonly response?: any;\n\n  constructor(message: string, code: number = 0, status: number = 0, response?: any) {\n    super(message);\n    this.name = 'ApiError';\n    this.code = code;\n    this.status = status;\n    this.response = response;\n  }\n}\n\n/**\n * Configuration for API service\n */\ninterface ApiConfig {\n  baseUrl: string;\n  timeout: number;\n  maxRetries: number;\n  retryDelay: number;\n}\n\n/**\n * Default API configuration\n */\nconst DEFAULT_API_CONFIG: ApiConfig = {\n  baseUrl: 'https://embodee.app',\n  timeout: 30000, // 30 seconds\n  maxRetries: 3,\n  retryDelay: 1000, // 1 second\n};\n\n/**\n * API service class for Embodee integration\n */\nexport class EmbodeeApiService {\n  private config: ApiConfig;\n\n  constructor(config: Partial<ApiConfig> = {}) {\n    this.config = { ...DEFAULT_API_CONFIG, ...config };\n  }\n\n  /**\n   * Fetches product data from Embodee API\n   * @param workspaceID - The workspace identifier\n   * @param productID - The product identifier\n   * @param variant - Optional variant name (defaults to 'Master')\n   * @param designID - Optional design ID (defaults to 'false')\n   * @returns Promise resolving to product data\n   */\n  async getProductData(\n    workspaceID: string,\n    productID: string,\n    variant: string = 'Master',\n    designID: string = 'false'\n  ): Promise<EmbodeeProductData> {\n    const url = this.buildProductDataUrl(workspaceID, productID, variant, designID);\n    \n    // Log API call\n    logApiCall('GET', url, { workspaceID, productID, variant, designID }, 'getProductData');\n    \n    try {\n      const response = await this.fetchWithRetry(url);\n      const data: EmbodeeApiResponse<EmbodeeProductData> = await response.json();\n      \n      // Log API response\n      logApiResponse('GET', url, response.status, data, 'getProductData');\n      \n      if (data.status !== 'ok') {\n        const apiError = new ApiError(\n          `API Error: ${data.message}`,\n          data.errorcode,\n          response.status,\n          data\n        );\n        logger.error('API', 'getProductData error', { error: apiError.message }, 'getProductData');\n        throw apiError;\n      }\n\n      logger.info('API', 'Product data fetched successfully', {\n        workspaceID,\n        productID,\n        variant,\n        designID,\n        hasConfig: !!data.result?.config,\n        hasUI: !!data.result?.ui,\n        hasLibrary: !!data.result?.library\n      }, 'getProductData');\n\n      return data.result;\n    } catch (error) {\n      if (error instanceof ApiError) {\n        throw error;\n      }\n      \n      const apiError = new ApiError(\n        `Failed to fetch product data: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        0,\n        0,\n        error\n      );\n      logger.error('API', 'getProductData error', { error: apiError.message }, 'getProductData');\n      throw apiError;\n    }\n  }\n\n  /**\n   * Fetches product data using URL parameters\n   * @param params - URL parameters containing workspaceID, productID, etc.\n   * @returns Promise resolving to product data\n   */\n  async getProductDataFromParams(params: URLParams): Promise<EmbodeeProductData> {\n    const { workspaceID, productID, variant = 'Master', designID = 'false' } = params;\n    return this.getProductData(workspaceID, productID, variant, designID);\n  }\n\n  /**\n   * Fetches library data for a workspace\n   * @param workspaceID - The workspace identifier\n   * @returns Promise resolving to library data\n   */\n  async getLibraryData(workspaceID: string): Promise<any> {\n    const url = `${this.config.baseUrl}/configurator/get-library/${workspaceID}`;\n    \n    try {\n      const response = await this.fetchWithRetry(url);\n      const data: EmbodeeApiResponse<any> = await response.json();\n      \n      if (data.status !== 'ok') {\n        throw new ApiError(\n          `API Error: ${data.message}`,\n          data.errorcode,\n          response.status,\n          data\n        );\n      }\n\n      return data.result;\n    } catch (error) {\n      if (error instanceof ApiError) {\n        throw error;\n      }\n      \n      throw new ApiError(\n        `Failed to fetch library data: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        0,\n        0,\n        error\n      );\n    }\n  }\n\n  /**\n   * Builds the product data URL\n   * @param workspaceID - The workspace identifier\n   * @param productID - The product identifier\n   * @param variant - The variant name\n   * @param designID - The design ID\n   * @returns Complete URL for product data endpoint\n   */\n  private buildProductDataUrl(\n    workspaceID: string,\n    productID: string,\n    variant: string,\n    designID: string\n  ): string {\n    return `${this.config.baseUrl}/configurator/get-data/${workspaceID}/${productID}/${variant}/${designID}`;\n  }\n\n  /**\n   * Fetches data with retry logic and timeout\n   * @param url - URL to fetch\n   * @param options - Fetch options\n   * @returns Promise resolving to Response\n   */\n  private async fetchWithRetry(url: string, options: RequestInit = {}): Promise<Response> {\n    let lastError: Error | null = null;\n    \n    logger.debug('API', `Starting fetch with retry for ${url}`, { \n      maxRetries: this.config.maxRetries,\n      timeout: this.config.timeout \n    }, 'fetchWithRetry');\n    \n    for (let attempt = 1; attempt <= this.config.maxRetries; attempt++) {\n      try {\n        logger.debug('API', `Fetch attempt ${attempt}/${this.config.maxRetries}`, { url }, 'fetchWithRetry');\n        \n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => {\n          logger.warn('API', `Request timeout after ${this.config.timeout}ms`, { url }, 'fetchWithRetry');\n          controller.abort();\n        }, this.config.timeout);\n        \n        const response = await fetch(url, {\n          ...options,\n          signal: controller.signal,\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            ...options.headers,\n          },\n        });\n        \n        clearTimeout(timeoutId);\n        \n        logger.debug('API', `Response received`, { \n          url, \n          status: response.status, \n          statusText: response.statusText,\n          headers: Object.fromEntries(response.headers.entries())\n        }, 'fetchWithRetry');\n        \n        if (!response.ok) {\n          const apiError = new ApiError(\n            `HTTP ${response.status}: ${response.statusText}`,\n            0,\n            response.status,\n            response\n          );\n          logger.warn('API', `HTTP error response`, { \n            url, \n            status: response.status, \n            statusText: response.statusText \n          }, 'fetchWithRetry');\n          throw apiError;\n        }\n        \n        logger.info('API', `Request successful`, { url, status: response.status }, 'fetchWithRetry');\n        return response;\n      } catch (error) {\n        lastError = error instanceof Error ? error : new Error('Unknown error');\n        \n        logger.warn('API', `Request failed (attempt ${attempt}/${this.config.maxRetries})`, { \n          url, \n          error: lastError.message,\n          errorType: (error as any).constructor?.name || 'Unknown'\n        }, 'fetchWithRetry');\n        \n        // Don't retry on certain errors\n        if (error instanceof ApiError && error.status >= 400 && error.status < 500) {\n          logger.error('API', `Client error - not retrying`, { \n            url, \n            status: error.status, \n            message: error.message \n          }, 'fetchWithRetry');\n          throw error;\n        }\n        \n        // Log retry attempt\n        if (attempt < this.config.maxRetries) {\n          const delay = this.config.retryDelay * attempt;\n          logger.info('API', `Retrying in ${delay}ms`, { \n            url, \n            attempt, \n            maxRetries: this.config.maxRetries,\n            delay \n          }, 'fetchWithRetry');\n          await this.delay(delay);\n        }\n      }\n    }\n    \n    logger.error('API', `Max retries exceeded`, { \n      url, \n      maxRetries: this.config.maxRetries, \n      lastError: lastError?.message \n    }, 'fetchWithRetry');\n    throw lastError || new Error('Max retries exceeded');\n  }\n\n  /**\n   * Delays execution for the specified number of milliseconds\n   * @param ms - Milliseconds to delay\n   * @returns Promise that resolves after the delay\n   */\n  private delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Validates API response structure\n   * @param data - Response data to validate\n   * @returns True if valid, false otherwise\n   */\n  // private _isValidApiResponse(data: any): data is EmbodeeApiResponse<any> {\n  //   return (\n  //     data &&\n  //     typeof data === 'object' &&\n  //     typeof data.status === 'string' &&\n  //     typeof data.errorcode === 'number' &&\n  //     typeof data.message === 'string' &&\n  //     'result' in data\n  //   );\n  // }\n\n  /**\n   * Updates API configuration\n   * @param newConfig - Partial configuration to update\n   */\n  updateConfig(newConfig: Partial<ApiConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  /**\n   * Gets current API configuration\n   * @returns Current configuration\n   */\n  getConfig(): ApiConfig {\n    return { ...this.config };\n  }\n}\n\n/**\n * Default API service instance\n */\nexport const embodeeApi = new EmbodeeApiService();\n\n/**\n * Creates a new API service instance with custom configuration\n * @param config - Custom configuration\n * @returns New API service instance\n */\nexport function createEmbodeeApiService(config: Partial<ApiConfig>): EmbodeeApiService {\n  return new EmbodeeApiService(config);\n}\n\n/**\n * Utility function to check if an error is an API error\n * @param error - Error to check\n * @returns True if it's an API error\n */\nexport function isApiError(error: any): error is ApiError {\n  return error instanceof ApiError;\n}\n\n/**\n * Utility function to get error message from any error type\n * @param error - Error to extract message from\n * @returns Error message string\n */\nexport function getErrorMessage(error: any): string {\n  if (error instanceof ApiError) {\n    return error.message;\n  }\n  \n  if (error instanceof Error) {\n    return error.message;\n  }\n  \n  return 'An unknown error occurred';\n}\n\n/**\n * Utility function to log API errors with context\n * @param error - Error to log\n * @param context - Additional context information\n */\nexport function logApiError(error: any, context: string = 'API Call'): void {\n  if (process.env['NODE_ENV'] === 'development') {\n    console.error(`[${context}]`, error);\n    \n    if (error instanceof ApiError) {\n      console.error('API Error Details:', {\n        message: error.message,\n        code: error.code,\n        status: error.status,\n        response: error.response\n      });\n    }\n  }\n}\n","// Custom hook for Embodee API integration and state management\n// Provides React state management for the product configurator\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { embodeeApi, getValidatedUrlParams, logApiError } from '../utils';\nimport { logger, logConfiguratorInit, logConfiguratorReady, logConfiguratorError } from '../utils/logger';\nimport { \n  EmbodeeProductData, \n  EmbodeeConfigurator, \n  ConfiguratorDisplayOption, \n  Selections, \n  UseEmbodeeReturn,\n  URLParams\n} from '../types';\n\n/**\n * Helper to parse the UI structure from the Embodee API into a format the UI components can use\n * This function transforms the raw API response into React-friendly option structures\n */\nconst parseUiStructure = (nodes: any[]): { options: ConfiguratorDisplayOption[], selections: Selections } => {\n  const options: ConfiguratorDisplayOption[] = [];\n  const selections: Selections = {};\n\n  const traverse = (node: any) => {\n    // Case 1: Handle Text Decals based on documentation (type/subtype)\n    if (node.type === 'decal' && node.subtype === 'text' && node.props?.text) {\n      const textProps = node.props.text;\n\n      const textOption = {\n        type: 'text' as const,\n        id: node.code,\n        name: node.name,\n        text: { propName: '', label: '', value: '' },\n      };\n\n      // Iterate over the properties within the 'text' object (e.g., text, font, fillcolor)\n      for (const propName in textProps) {\n        const prop = textProps[propName];\n\n        // Skip properties that are not meant to be changed by the user\n        if (!prop || prop.dynamic === false) continue;\n\n        const optionId = `${node.code}:${propName}`;\n\n        if (prop.type === 'text') {\n          textOption.text = {\n            propName: propName,\n            label: prop.label,\n            value: prop.value\n          };\n          selections[optionId] = prop.value;\n        } else if (prop.type === 'list' && prop.items) {\n          const itemValues = Object.values(prop.items);\n\n          if (itemValues.length > 0) {\n            const isColor = propName.toLowerCase().includes('color');\n            \n            const subOption = {\n              id: optionId,\n              name: prop.label,\n              values: itemValues.map((item: any) => ({\n                id: item.id,\n                name: item.name,\n                color: isColor ? `#${item.value}` : null,\n                thumbnailUrl: null,\n              })),\n            };\n            \n            // Assign to font or color based on property name\n            if (propName.toLowerCase().includes('font')) {\n              (textOption as any).font = subOption;\n            } else if (isColor) {\n              (textOption as any).color = subOption;\n            }\n            \n            if (prop.value) {\n              selections[optionId] = prop.value;\n            }\n          }\n        }\n      }\n      \n      // Only add the component if it has a customizable text field\n      if (textOption.text.propName) {\n        options.push(textOption);\n      }\n    \n    // Case 2: Handle all other standard components\n    } else if (node.props) {\n      for (const propName in node.props) {\n        const prop = node.props[propName];\n        // Standard components have an `items` function\n        if (prop && typeof prop.items === 'function') {\n          const items = prop.items();\n          const itemValues = Object.values(items);\n\n          if (itemValues.length > 0) {\n            const optionId = `${node.code}:${propName}`;\n            options.push({\n              id: optionId,\n              name: `${node.name} ${propName.charAt(0).toUpperCase() + propName.slice(1)}`,\n              values: itemValues.map((item: any) => ({\n                id: item.id,\n                name: item.name,\n                color: propName === 'color' ? `#${item.value}` : null,\n                thumbnailUrl: propName === 'material' ? item.value : null,\n              })),\n            });\n            if (prop.value) {\n              selections[optionId] = prop.value;\n            }\n          }\n        }\n      }\n    }\n\n    if (node.children) {\n      node.children.forEach(traverse);\n    }\n  };\n\n  nodes.forEach(traverse);\n  return { options, selections };\n};\n\n/**\n * Custom hook for Embodee 3D viewer integration\n * Manages state, API calls, and 3D viewer initialization\n */\nexport const useEmbodee = (): UseEmbodeeReturn => {\n  // State management\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [configurator, setConfigurator] = useState<EmbodeeConfigurator | null>(null);\n  const [productData, setProductData] = useState<EmbodeeProductData | null>(null);\n  const [options, setOptions] = useState<ConfiguratorDisplayOption[]>([]);\n  const [selections, setSelections] = useState<Selections>({});\n  const [isInitialized, setIsInitialized] = useState<boolean>(false);\n  const [retryCount, setRetryCount] = useState<number>(0);\n  const [isRetrying, setIsRetrying] = useState<boolean>(false);\n\n  // Refs for managing the 3D viewer\n  const configuratorRef = useRef<EmbodeeConfigurator | null>(null);\n  const initializationRef = useRef<boolean>(false);\n  const retryTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  /**\n   * Initialize the Embodee 3D viewer and fetch product data\n   */\n  const initialize = useCallback(async (isRetry: boolean = false) => {\n    if (initializationRef.current && !isRetry) return;\n    \n    if (!isRetry) {\n      initializationRef.current = true;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      setIsRetrying(isRetry);\n\n      // Parse URL parameters\n      const urlParams = getValidatedUrlParams();\n      logConfiguratorInit(urlParams, `useEmbodee (attempt ${retryCount + 1})`);\n\n      // Wait for EmbodeeLoader to be available with retry logic\n      logger.debug('CONFIGURATOR', 'Waiting for EmbodeeLoader', {}, 'useEmbodee');\n      await waitForEmbodeeLoaderWithRetry();\n      logger.info('CONFIGURATOR', 'EmbodeeLoader is available', {}, 'useEmbodee');\n\n      // Fetch product data from API with retry logic\n      logger.debug('CONFIGURATOR', 'Fetching product data', { urlParams }, 'useEmbodee');\n      const data = await fetchProductDataWithRetry(urlParams);\n      setProductData(data);\n      logger.info('CONFIGURATOR', 'Product data fetched successfully', { \n        hasConfig: !!data?.config,\n        hasUI: !!data?.ui,\n        hasLibrary: !!data?.library\n      }, 'useEmbodee');\n\n      // Initialize the 3D viewer with retry logic\n      logger.debug('CONFIGURATOR', 'Initializing 3D viewer', { urlParams }, 'useEmbodee');\n      const viewerConfig = await initializeViewerWithRetry(urlParams, data);\n      setConfigurator(viewerConfig);\n      configuratorRef.current = viewerConfig;\n      logger.info('CONFIGURATOR', '3D viewer initialized successfully', {}, 'useEmbodee');\n\n      // Set up event listeners\n      setupViewerEvents(viewerConfig);\n\n      // Reset retry state on success\n      setRetryCount(0);\n      setIsRetrying(false);\n\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to initialize configurator';\n      \n      // Determine if we should retry\n      const shouldRetry = shouldRetryInitialization(err, retryCount);\n      \n      if (shouldRetry && retryCount < 3) {\n        const nextRetryCount = retryCount + 1;\n        setRetryCount(nextRetryCount);\n        \n        logApiError(err, `useEmbodee initialization failed (attempt ${nextRetryCount}), retrying in ${getRetryDelay(nextRetryCount)}ms`);\n        \n        // Schedule retry\n        retryTimeoutRef.current = setTimeout(() => {\n          initialize(true);\n        }, getRetryDelay(nextRetryCount));\n        \n        setError(`Initialization failed, retrying... (${nextRetryCount}/3)`);\n      } else {\n        setError(errorMessage);\n        logApiError(err, 'useEmbodee initialization - max retries exceeded');\n        setIsRetrying(false);\n      }\n    } finally {\n      if (!isRetrying) {\n        setIsLoading(false);\n      }\n    }\n  }, [retryCount, isRetrying]);\n\n  /**\n   * Wait for the EmbodeeLoader script to be available with retry logic\n   */\n  const waitForEmbodeeLoaderWithRetry = (): Promise<void> => {\n    return new Promise((resolve, reject) => {\n      const maxRetries = 150; // 150 * 200ms = 30 seconds timeout\n      let attempt = 0;\n      const interval = setInterval(() => {\n        if (typeof window !== 'undefined' && \n            typeof (window as any).EmbodeeLoader?.init === 'function') {\n          clearInterval(interval);\n          resolve();\n        } else if (++attempt > maxRetries) {\n          clearInterval(interval);\n          reject(new Error(\"The 3D viewer script failed to load in time.\"));\n        }\n      }, 200);\n    });\n  };\n\n  /**\n   * Fetch product data with retry logic\n   */\n  const fetchProductDataWithRetry = async (urlParams: URLParams): Promise<EmbodeeProductData> => {\n    try {\n      return await embodeeApi.getProductDataFromParams(urlParams);\n    } catch (err) {\n      logApiError(err, 'fetchProductDataWithRetry');\n      throw err;\n    }\n  };\n\n  /**\n   * Initialize viewer with retry logic\n   */\n  const initializeViewerWithRetry = async (urlParams: URLParams, data: EmbodeeProductData): Promise<EmbodeeConfigurator> => {\n    try {\n      return await initializeViewer(urlParams, data);\n    } catch (err) {\n      logApiError(err, 'initializeViewerWithRetry');\n      throw err;\n    }\n  };\n\n  /**\n   * Determine if initialization should be retried based on error type\n   */\n  const shouldRetryInitialization = (error: any, currentRetryCount: number): boolean => {\n    // Don't retry if we've exceeded max retries\n    if (currentRetryCount >= 3) return false;\n\n    // Don't retry on certain error types\n    if (error?.message?.includes('Invalid workspaceID') || \n        error?.message?.includes('Invalid productID') ||\n        error?.message?.includes('Product not found')) {\n      return false;\n    }\n\n    // Retry on network errors, timeouts, and API errors\n    return true;\n  };\n\n  /**\n   * Get retry delay with exponential backoff\n   */\n  const getRetryDelay = (retryCount: number): number => {\n    return Math.min(1000 * Math.pow(2, retryCount - 1), 10000); // Max 10 seconds\n  };\n\n  /**\n   * Initialize the 3D viewer with the given parameters\n   */\n  const initializeViewer = async (urlParams: URLParams, _data: EmbodeeProductData): Promise<EmbodeeConfigurator> => {\n    const viewerConfig = await (window as any).EmbodeeLoader.init({\n      containerID: 'embodee-configurator',\n      workspaceID: urlParams.workspaceID,\n      productCode: urlParams.productID,\n      variant: urlParams.variant || 'Master',\n      designID: urlParams.designID || 'false',\n      width: urlParams.width || '100%',\n      height: urlParams.height || '600px',\n      host: urlParams.host || 'https://embodee.app',\n    });\n\n    return viewerConfig;\n  };\n\n  /**\n   * Set up event listeners for the 3D viewer\n   */\n  const setupViewerEvents = (viewer: EmbodeeConfigurator) => {\n    logger.debug('CONFIGURATOR', 'Setting up viewer events', {}, 'useEmbodee');\n    \n    const handleProductReady = () => {\n      try {\n        logger.debug('CONFIGURATOR', 'Product ready event received', {}, 'useEmbodee');\n        \n        const { options: parsedOptions, selections: parsedSelections } = parseUiStructure(viewer.uiStructure);\n        setOptions(parsedOptions);\n        setSelections(parsedSelections);\n        setIsInitialized(true);\n\n        logConfiguratorReady(parsedOptions, parsedSelections, 'useEmbodee');\n        \n        logger.info('CONFIGURATOR', 'Product ready - UI structure parsed successfully', {\n          optionsCount: parsedOptions.length,\n          selectionsCount: Object.keys(parsedSelections).length,\n          optionTypes: parsedOptions.map(opt => (opt as any).type || 'unknown')\n        }, 'useEmbodee');\n      } catch (err) {\n        logConfiguratorError(err, 'Product ready handler');\n        setError('Failed to parse product options');\n      }\n    };\n\n    viewer.subscribe(viewer.eventIDs.productReady, handleProductReady);\n    logger.info('CONFIGURATOR', 'Viewer events subscribed successfully', {}, 'useEmbodee');\n  };\n\n  /**\n   * Update a component value in the 3D viewer with retry logic\n   */\n  const setValue = useCallback(async (\n    componentCode: string, \n    property: string, \n    value: string, \n    isCustom: boolean = false\n  ) => {\n    const viewer = configuratorRef.current;\n    if (!viewer || !isInitialized) {\n      throw new Error('Configurator not ready');\n    }\n\n    const maxRetries = 3;\n    let lastError: Error | null = null;\n\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        await viewer.setComponentValue(componentCode, property, value, isCustom);\n        \n        // Update local state on success\n        const optionId = `${componentCode}:${property}`;\n        setSelections(prev => ({ ...prev, [optionId]: value }));\n        \n        // Clear any previous errors\n        if (error && error.includes('setValue')) {\n          setError(null);\n        }\n        \n        return; // Success, exit retry loop\n      } catch (err) {\n        lastError = err instanceof Error ? err : new Error('Unknown error');\n        \n        // Don't retry on certain error types\n        if (err instanceof Error && (\n          err.message.includes('Invalid component') ||\n          err.message.includes('Invalid property') ||\n          err.message.includes('Invalid value')\n        )) {\n          throw err;\n        }\n        \n        // Log retry attempt\n        if (attempt < maxRetries) {\n          logApiError(err, `setValue retry ${attempt}/${maxRetries}: ${componentCode}:${property}`);\n          await new Promise(resolve => setTimeout(resolve, 500 * attempt));\n        }\n      }\n    }\n    \n    // All retries failed\n    const errorMessage = `Failed to set value after ${maxRetries} attempts: ${lastError?.message}`;\n    logApiError(lastError, `setValue failed: ${componentCode}:${property}`);\n    setError(errorMessage);\n    throw new Error(errorMessage);\n  }, [isInitialized, error]);\n\n  /**\n   * Get a component value from the 3D viewer\n   */\n  const getValue = useCallback((componentCode: string, property: string): string => {\n    const viewer = configuratorRef.current;\n    if (!viewer || !isInitialized) {\n      return '';\n    }\n\n    try {\n      return viewer.getComponentValue(componentCode, property);\n    } catch (err) {\n      logApiError(err, `getValue: ${componentCode}:${property}`);\n      return '';\n    }\n  }, [isInitialized]);\n\n  /**\n   * Get current selections from the 3D viewer\n   */\n  const getSelections = useCallback((): Selections => {\n    const viewer = configuratorRef.current;\n    if (!viewer || !isInitialized) {\n      return selections;\n    }\n\n    try {\n      return viewer.getCurrentSelections();\n    } catch (err) {\n      logApiError(err, 'getSelections');\n      return selections;\n    }\n  }, [isInitialized, selections]);\n\n  // Initialize on mount\n  useEffect(() => {\n    initialize();\n  }, [initialize]);\n\n  /**\n   * Manual retry function for user-initiated retries\n   */\n  const retry = useCallback(() => {\n    if (isRetrying) return;\n    \n    // Clear any existing retry timeout\n    if (retryTimeoutRef.current) {\n      clearTimeout(retryTimeoutRef.current);\n      retryTimeoutRef.current = null;\n    }\n    \n    // Reset initialization flag to allow retry\n    initializationRef.current = false;\n    setRetryCount(0);\n    setError(null);\n    \n    // Start initialization\n    initialize();\n  }, [isRetrying, initialize]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      // Clear retry timeout\n      if (retryTimeoutRef.current) {\n        clearTimeout(retryTimeoutRef.current);\n        retryTimeoutRef.current = null;\n      }\n      \n      if (configuratorRef.current) {\n        // Cleanup any subscriptions or resources\n        configuratorRef.current = null;\n      }\n    };\n  }, []);\n\n  return {\n    configurator,\n    isLoading,\n    error,\n    initialize,\n    setValue,\n    getValue,\n    getSelections,\n    // Additional state for components\n    productData,\n    options,\n    selections,\n    isInitialized,\n    // Enhanced error handling and retry\n    retry,\n    retryCount,\n    isRetrying\n  };\n};\n","import React from 'react';\nimport { useEmbodee } from '../hooks/useEmbodee';\nimport ErrorBoundary from './ErrorBoundary';\nimport ConfiguratorLoading from './ConfiguratorLoading';\nimport ConfiguratorError from './ConfiguratorError';\nimport LoadingOverlay from './LoadingOverlay';\n\ninterface ConfiguratorWrapperProps {\n  children: React.ReactNode;\n  className?: string;\n  showRetryButton?: boolean;\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void;\n}\n\n/**\n * Main wrapper component that handles loading states and errors for the configurator\n */\nexport const ConfiguratorWrapper: React.FC<ConfiguratorWrapperProps> = ({\n  children,\n  className = '',\n  showRetryButton: _showRetryButton = true,\n  onError\n}) => {\n  const {\n    isLoading,\n    error,\n    isRetrying,\n    retryCount,\n    retry,\n    isInitialized\n  } = useEmbodee();\n\n  const handleError = (error: Error, errorInfo: React.ErrorInfo) => {\n    console.error('ConfiguratorWrapper caught an error:', error, errorInfo);\n    if (onError) {\n      onError(error, errorInfo);\n    }\n  };\n\n  // Show loading state\n  if (isLoading || isRetrying) {\n    return (\n      <ConfiguratorLoading\n        isLoading={isLoading}\n        isRetrying={isRetrying}\n        retryCount={retryCount}\n        className={className}\n      />\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <ConfiguratorError\n        error={error}\n        isRetrying={isRetrying}\n        retryCount={retryCount}\n        onRetry={retry}\n        className={className}\n      />\n    );\n  }\n\n  // Show content with error boundary\n  return (\n    <ErrorBoundary onError={handleError} className={className}>\n      <LoadingOverlay\n        isLoading={!isInitialized}\n        message=\"Initializing 3D viewer...\"\n        className=\"min-h-[400px]\"\n      >\n        {children}\n      </LoadingOverlay>\n    </ErrorBoundary>\n  );\n};\n\nexport default ConfiguratorWrapper;\n","import { ConfiguratorWrapper } from './components';\nimport { useEmbodee } from './hooks/useEmbodee';\n\nfunction App() {\n  const { isLoading, error, isInitialized } = useEmbodee();\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <header className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">\n            Embodee Product Configurator\n          </h1>\n          <p className=\"text-lg text-gray-600\">\n            Modern React + TypeScript + Vite + Tailwind CSS\n          </p>\n        </header>\n\n        <main className=\"max-w-4xl mx-auto\">\n          <ConfiguratorWrapper>\n            <div className=\"bg-white rounded-lg shadow-lg p-8\">\n              <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">\n                Configurator Status\n              </h2>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-3 h-3 rounded-full ${isLoading ? 'bg-yellow-500' : 'bg-green-500'}`}></div>\n                  <span className=\"text-sm font-medium\">\n                    {isLoading ? 'Loading...' : 'Ready'}\n                  </span>\n                </div>\n                \n                {error && (\n                  <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n                    <p className=\"text-red-800 text-sm\">{error}</p>\n                  </div>\n                )}\n                \n                {isInitialized && (\n                  <div className=\"bg-green-50 border border-green-200 rounded-md p-4\">\n                    <p className=\"text-green-800 text-sm\">\n                      ✅ Configurator initialized successfully!\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"mt-8 p-6 bg-gray-50 rounded-lg\">\n                <h3 className=\"text-lg font-medium text-gray-800 mb-3\">\n                  Test URL Parameters\n                </h3>\n                <p className=\"text-sm text-gray-600 mb-4\">\n                  Add these parameters to test the configurator:\n                </p>\n                <div className=\"bg-white p-4 rounded border font-mono text-sm\">\n                  ?workspaceID=demo-workspace&productID=demo-product&variant=Master\n                </div>\n              </div>\n            </div>\n          </ConfiguratorWrapper>\n        </main>\n\n        <footer className=\"text-center mt-12 text-gray-500 text-sm\">\n          <p>Built with React, TypeScript, Vite, and Tailwind CSS</p>\n          <p>Deployed on GitHub Pages</p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","LoadingSpinner","size","message","className","sizeClasses","jsxs","jsx","LoadingOverlay","isLoading","children","overlayClassName","ConfiguratorLoading","isRetrying","retryCount","getLoadingMessage","ErrorBoundary","Component","props","__publicField","error","errorInfo","_a","ConfiguratorError","onRetry","getErrorMessage","errorType","getErrorIcon","getErrorTitle","getErrorDescription","LogLevel","Logger","config","__spreadValues","level","category","data","context","entry","levelName","prefix","method","url","params","status","response","options","selections","filtered","log","newConfig","logger","logApiCall","logApiResponse","logConfiguratorInit","logConfiguratorReady","logConfiguratorError","DEFAULT_FALLBACK_CONFIG","ENVIRONMENT_FALLBACKS","FallbackConfigManager","strategy","env","envConfig","stored","parsed","urlParams","queryConfig","result","errors","isValid","sources","fallbackManager","applyFallbacksToParams","parseUrlParams","urlToParse","hasWorkspaceID","hasProductID","workspaceID","productID","variant","designID","host","width","height","partialParams","validateUrlParams","getValidatedUrlParams","validation","ApiError","code","DEFAULT_API_CONFIG","EmbodeeApiService","__async","apiError","_b","_c","_0","lastError","attempt","controller","timeoutId","__spreadProps","delay","ms","resolve","embodeeApi","logApiError","parseUiStructure","nodes","traverse","node","textProps","textOption","propName","prop","optionId","itemValues","isColor","subOption","item","items","useEmbodee","setIsLoading","useState","setError","configurator","setConfigurator","productData","setProductData","setOptions","setSelections","isInitialized","setIsInitialized","setRetryCount","setIsRetrying","configuratorRef","useRef","initializationRef","retryTimeoutRef","initialize","useCallback","isRetry","exports","waitForEmbodeeLoaderWithRetry","fetchProductDataWithRetry","viewerConfig","initializeViewerWithRetry","setupViewerEvents","err","errorMessage","shouldRetryInitialization","nextRetryCount","getRetryDelay","reject","interval","initializeViewer","currentRetryCount","_data","viewer","handleProductReady","parsedOptions","parsedSelections","opt","setValue","componentCode","property","value","isCustom","maxRetries","prev","getValue","getSelections","useEffect","retry","ConfiguratorWrapper","_showRetryButton","onError","handleError","App","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0,1,2]}