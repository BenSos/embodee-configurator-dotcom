import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ConfiguratorWrapper } from './components';
import { useEmbodee } from './hooks/useEmbodee';
function App() {
    const { isLoading, error, isInitialized } = useEmbodee();
    return (_jsx("div", { className: "min-h-screen bg-gray-50", children: _jsxs("div", { className: "container mx-auto px-4 py-8", children: [_jsxs("header", { className: "text-center mb-8", children: [_jsx("h1", { className: "text-4xl font-bold text-gray-900 mb-2", children: "Embodee Product Configurator" }), _jsx("p", { className: "text-lg text-gray-600", children: "Modern React + TypeScript + Vite + Tailwind CSS" })] }), _jsx("main", { className: "max-w-4xl mx-auto", children: _jsx(ConfiguratorWrapper, { children: _jsxs("div", { className: "bg-white rounded-lg shadow-lg p-8", children: [_jsx("h2", { className: "text-2xl font-semibold text-gray-800 mb-4", children: "Configurator Status" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("div", { className: `w-3 h-3 rounded-full ${isLoading ? 'bg-yellow-500' : 'bg-green-500'}` }), _jsx("span", { className: "text-sm font-medium", children: isLoading ? 'Loading...' : 'Ready' })] }), error && (_jsx("div", { className: "bg-red-50 border border-red-200 rounded-md p-4", children: _jsx("p", { className: "text-red-800 text-sm", children: error }) })), isInitialized && (_jsx("div", { className: "bg-green-50 border border-green-200 rounded-md p-4", children: _jsx("p", { className: "text-green-800 text-sm", children: "\u2705 Configurator initialized successfully!" }) }))] }), _jsxs("div", { className: "mt-8 p-6 bg-gray-50 rounded-lg", children: [_jsx("h3", { className: "text-lg font-medium text-gray-800 mb-3", children: "Test URL Parameters" }), _jsx("p", { className: "text-sm text-gray-600 mb-4", children: "Add these parameters to test the configurator:" }), _jsx("div", { className: "bg-white p-4 rounded border font-mono text-sm", children: "?workspaceID=demo-workspace&productID=demo-product&variant=Master" })] })] }) }) }), _jsxs("footer", { className: "text-center mt-12 text-gray-500 text-sm", children: [_jsx("p", { children: "Built with React, TypeScript, Vite, and Tailwind CSS" }), _jsx("p", { children: "Deployed on GitHub Pages" })] })] }) }));
}
export default App;
